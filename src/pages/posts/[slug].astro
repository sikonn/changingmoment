---
import fs from 'node:fs';
import path from 'node:path';
import { marked } from 'marked';
import MarkdownPostLayout from '../../layouts/MarkdownPostLayout.astro';

export const prerender = true;

export async function getStaticPaths() {
  const postsDir = path.resolve('./src/pages/posts');
  const files = fs.readdirSync(postsDir).filter(file => file.endsWith('.md'));

  return files.map(file => ({
    params: { slug: file.replace('.md', '') }
  }));
}

const { slug } = Astro.params;
const filePath = path.resolve(`./src/pages/posts/${slug}.md`);

if (!fs.existsSync(filePath)) {
  throw new Error(`Markdown file not found: ${slug}.md`);
}

const rawContent = fs.readFileSync(filePath, 'utf-8');

// --- 1. 提取 frontmatter ---
const frontmatterMatch = rawContent.match(/^---\n([\s\S]*?)\n---/);
let frontmatter = {};
let body = rawContent;

if (frontmatterMatch) {
  const yaml = frontmatterMatch[1];
  body = rawContent.replace(frontmatterMatch[0], '');
  yaml.split('\n').forEach(line => {
    const [key, ...rest] = line.split(':');
    frontmatter[key.trim()] = rest.join(':').trim();
  });
}

// --- 2. 设置默认字段 ---
const title = frontmatter.title || slug;
const description = frontmatter.description || '';
const pubDate = frontmatter.pubDate || '';
const image = frontmatter.image || '/default-og-image.jpg';
const tags = frontmatter.tags?.split(',').map(t => t.trim()) || [];
const readTime = Math.ceil(body.split(/\s+/).length / 400);
const wordCount = body.split(/\s+/).length;

// --- 3. Markdown 转 HTML ---
const htmlContent = marked.parse(body);

// --- 4. 页面路径（用于分享）---
const pageUrl = new URL(`/posts/${slug}`, Astro.site);

---

<MarkdownPostLayout
  frontmatter={{
    title,
    description,
    pubDate,
    tags,
    readTime,
    wordCount,
    image
  }}
  url={pageUrl}
/>

<article class="post-content" set:html={htmlContent} />
